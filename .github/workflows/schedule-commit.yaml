name: build-nba-webpage
on:
  schedule:
    - cron: "0 12 * * *"
  workflow_dispatch:

jobs:
  check-date:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.date_check.outputs.should_run }}
    steps:
      - id: date_check
        run: |
          CURRENT_DATE=$(date -u +%Y-%m-%d)
          CUTOFF_DATE="2025-04-15"
          if [[ "$CURRENT_DATE" < "$CUTOFF_DATE" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi
          
  build-nba-webpage:
    runs-on: macos-13  # Using older macOS version (Monterey)
    name: macOS 13 (release)
    needs: check-date
    if: ${{ needs.check-date.outputs.should_run == 'true' }}
    
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      WORKON_HOME: ./.virtualenvs
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup macOS environment
        run: |
          # Find where gettext is located
          brew --prefix gettext
          
          # Create ~/.R/Makevars with proper include paths
          mkdir -p ~/.R
          echo "CPPFLAGS=-I$(brew --prefix gettext)/include" > ~/.R/Makevars
          echo "LDFLAGS=-L$(brew --prefix gettext)/lib" >> ~/.R/Makevars
          
          # Show the file contents for debugging
          cat ~/.R/Makevars
          
          # Make sure gettext is linked
          brew link --force gettext
      
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'
      
      - name: Install stringi and Matrix binaries first
        run: |
          options(repos = c(CRAN = 'https://cloud.r-project.org'))
          install.packages(c("stringi", "Matrix"), type = "binary")
        shell: Rscript {0}
      
      - name: Capture snapshot (optional safety step)
        run: renv::snapshot(prompt = FALSE)
        shell: Rscript {0}
      
      - name: Restore all other packages
        run: |
          exclude_pkgs <- c("stringi", "Matrix")
          pkgs <- setdiff(names(renv::dependencies()$Package), exclude_pkgs)
          renv::restore(packages = pkgs, prompt = FALSE)
        shell: Rscript {0}

      
      - uses: r-lib/actions/setup-pandoc@v2
      
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: rcmdcheck remotes reticulate
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Setup Python virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install pandas nba_api
          echo "RETICULATE_PYTHON=$(pwd)/venv/bin/python" >> $GITHUB_ENV
        shell: bash
      
    - name: Build webpage
      run: |
        echo "Sys.setenv(RETICULATE_PYTHON = '$(pwd)/venv/bin/python')" > .Renviron
        Rscript nba-over-under-2024-2025/make_plot_html.R
      shell: bash
      
      - name: Push changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add -A
          git commit -m "GitHub Actions NBA page build" || echo "No changes to commit"
          git push origin master
      
      - name: Session info
        run: |
          Rscript -e "install.packages('sessioninfo')"
          Rscript -e "sessioninfo::session_info()"
        shell: bash
