name: build-nba-webpage
on:
  schedule:
    - cron: "0 12 * * *"  # Fixed cron syntax (run at 12:00 UTC daily)
  workflow_dispatch:

jobs:
  check-date:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.date_check.outputs.should_run }}
    steps:
      - id: date_check
        run: |
          CURRENT_DATE=$(date -u +%Y-%m-%d)
          CUTOFF_DATE="2025-04-15"
          if [[ "$CURRENT_DATE" < "$CUTOFF_DATE" || "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "should_run=true" >> $GITHUB_OUTPUT
          else
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi
          
  build-nba-webpage:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    needs: check-date
    if: ${{ needs.check-date.outputs.should_run == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: 'release'}
    
    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      WORKON_HOME: ./.virtualenvs
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Fix macOS dependencies
        run: |
          # Ensure gettext is linked properly
          brew unlink gettext || true
          brew install gettext
          brew link --force gettext
          
          # Find and print the location of gettext
          GETTEXT_PREFIX=$(brew --prefix gettext)
          echo "Gettext location: $GETTEXT_PREFIX"
          
          # Properly set up environment variables for the compiler
          echo "CPPFLAGS=-I$GETTEXT_PREFIX/include" >> $GITHUB_ENV
          echo "LDFLAGS=-L$GETTEXT_PREFIX/lib" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=$GETTEXT_PREFIX/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
          
          # Install other potential dependencies that Matrix might need
          brew install pkg-config
          brew install gfortran
      
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
      
      - name: Install Matrix package manually
        run: |
          # Create a local R configuration file to include compiler flags
          mkdir -p ~/.R
          echo "CPPFLAGS=-I$(brew --prefix gettext)/include" > ~/.R/Makevars
          echo "LDFLAGS=-L$(brew --prefix gettext)/lib" >> ~/.R/Makevars
          cat ~/.R/Makevars
          
          # Install Matrix package directly
          Rscript -e "install.packages('Matrix', type = 'source', repos = 'https://cloud.r-project.org/')"
      
      - name: Setup renv
        uses: r-lib/actions/setup-renv@v2
      
      - uses: r-lib/actions/setup-pandoc@v2
      
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: rcmdcheck remotes reticulate
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'  # Adjust as needed
      
      - name: Setup Python virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install pandas nba_api
          echo "RETICULATE_PYTHON=$(pwd)/venv/bin/python" >> $GITHUB_ENV
        shell: bash
      
      - name: Build webpage
        run: |
          Rscript nba-over-under-2024-2025/make_plot_html.R
        shell: bash
      
      - name: Push changes
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add -A
          git commit -m "GitHub Actions NBA page build" || echo "No changes to commit"
          git push origin master
      
      - name: Session info
        run: |
          Rscript -e "install.packages('sessioninfo')"
          Rscript -e "sessioninfo::session_info()"
        shell: bash
