name: Deploy Shiny Apps

on:
#  schedule:
 #   - cron: "*/10 * * * *"
#    - cron: "0 13 * * *"
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  shiny-deploy:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      # Checkout repository
      - uses: actions/checkout@v4

      # Set up Pandoc for R Markdown rendering
      - uses: r-lib/actions/setup-pandoc@v2

      # Install required system libraries
      - name: Install system libraries
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pkg-config \
            libfontconfig1-dev \
            libfreetype6-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libpng-dev \
            libtiff-dev \
            libjpeg-dev \
            libwebp-dev \
            zlib1g-dev \
            libbz2-dev \
            imagemagick \
            libmagick++-dev \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libpoppler-cpp-dev
          
      # Set up R with a compatible version
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4.1'  # Match the version supported by shinyapps.io
          use-public-rspm: true

      - name: Setup renv
        uses: r-lib/actions/setup-renv@v2

      - name: Install Quarto
        run: |
          wget https://github.com/quarto-dev/quarto-cli/releases/download/v1.8.25/quarto-1.8.25-linux-amd64.deb
          sudo dpkg -i quarto-1.8.25-linux-amd64.deb

      # Install rsconnect for deployment
      - name: Install rsconnect
        run: Rscript -e 'renv::install("rsconnect")'

      # Authorize and deploy first app
      - name: Authorize and deploy player finder app
        continue-on-error: true
        env:
          APPNAME: nba-player-finder
          ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
          SERVER: shinyapps.io
        run: |
          Rscript -e 'rsconnect::setAccountInfo("${{ secrets.SHINYAPPS_ACCOUNT }}", "${{ secrets.SHINYAPPS_TOKEN }}", "${{ secrets.SHINYAPPS_SECRET }}")' \
                 -e 'install.packages(c("shiny", "curl", "retry", "janitor", "tidyverse", "DT", "tictoc", "httr", "jsonlite", "glue"), repos = "https://cran.rstudio.com/")' \
                 -e 'rsconnect::deployApp(appDir = "nba-over-under-2025-2026/rosters", appName = "${{ env.APPNAME }}", account = "${{ env.ACCOUNT }}", server = "${{ env.SERVER }}", quarto = FALSE)'

      # Authorize and deploy second app
      - name: Authorize and deploy points calculator app
        continue-on-error: true
        env:
          APPNAME: over-under-points-calculator
          ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
          SERVER: shinyapps.io
        run: |
          Rscript -e 'rsconnect::setAccountInfo("${{ secrets.SHINYAPPS_ACCOUNT }}", "${{ secrets.SHINYAPPS_TOKEN }}", "${{ secrets.SHINYAPPS_SECRET }}")' \
                 -e 'install.packages(c("shiny", "readxl", "tidyverse", "kableExtra", "DT"), repos = "https://cran.rstudio.com/")' \
                 -e 'rsconnect::deployApp(appDir = "nba-over-under-2025-2026/over-under-points-calculator", appName = "${{ env.APPNAME }}", account = "${{ env.ACCOUNT }}", server = "${{ env.SERVER }}", quarto = FALSE)'

      # Authorize and deploy third app
      # - name: Authorize and deploy fantasy draft app
      #   continue-on-error: true
      #   env:
      #     APPNAME: fantasy-draft
      #     ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
      #     SERVER: shinyapps.io
      #   run: |
      #     Rscript -e 'rsconnect::setAccountInfo("${{ secrets.SHINYAPPS_ACCOUNT }}", "${{ secrets.SHINYAPPS_TOKEN }}", "${{ secrets.SHINYAPPS_SECRET }}")' \
      #            -e 'install.packages(c("shiny", "shinyjs", "tibble", "readr", "dplyr"), repos = "https://cran.rstudio.com/")' \
      #            -e 'rsconnect::deployApp(appDir = "nba-over-under-2025-2026/fantasy-draft", appName = "${{ env.APPNAME }}", account = "${{ env.ACCOUNT }}", server = "${{ env.SERVER }}", quarto = FALSE)'
